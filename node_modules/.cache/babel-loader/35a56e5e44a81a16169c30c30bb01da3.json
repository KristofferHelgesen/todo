{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\E217794\\\\Documents\\\\Prosjekter\\\\todouseSelector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\E217794\\\\Documents\\\\Prosjekter\\\\todouseSelector\\\\src\\\\components\\\\Edit.js\";\nimport React, { useEffect } from \"react\";\nimport { DefaultEditor } from \"react-simple-wysiwyg\";\n\nconst Edit = props => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        editingThis = _React$useState2[0],\n        setEditingThis = _React$useState2[1];\n\n  let showEditor = editingThis ? true : false;\n  let oldValue = props.oldValue;\n\n  const _React$useState3 = React.useState(oldValue),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        value = _React$useState4[0],\n        setValue = _React$useState4[1];\n  /*\r\n      NOTE: text is the value and key. Therfore not posibble to update state directly\r\n      */\n\n\n  const showThis = (showEditor, oldValue) => {\n    return showEditor ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(DefaultEditor, {\n      value: value,\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      onClick: () => props.changeHandler(oldValue, value),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Save\")) : null;\n  };\n\n  return showThis(showEditor, oldValue);\n};\n\nexport default Edit;","map":{"version":3,"sources":["C:/Users/E217794/Documents/Prosjekter/todouseSelector/src/components/Edit.js"],"names":["React","useEffect","DefaultEditor","Edit","props","useState","editingThis","setEditingThis","showEditor","oldValue","value","setValue","showThis","e","target","changeHandler"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,0BACkBJ,KAAK,CAACK,QAAN,CAAe,KAAf,CADlB;AAAA;AAAA,QACbC,WADa;AAAA,QACAC,cADA;;AAEpB,MAAIC,UAAU,GAAGF,WAAW,GAAG,IAAH,GAAU,KAAtC;AAEA,MAAIG,QAAQ,GAAGL,KAAK,CAACK,QAArB;;AAJoB,2BAMMT,KAAK,CAACK,QAAN,CAAeI,QAAf,CANN;AAAA;AAAA,QAMbC,KANa;AAAA,QAMNC,QANM;AAOpB;;;;;AAKA,QAAMC,QAAQ,GAAG,CAACJ,UAAD,EAAaC,QAAb,KAA0B;AACzC,WAAOD,UAAU,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACbF,QAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAG,MAAA,OAAO,EAAE,MAAMN,KAAK,CAACW,aAAN,CAAoBN,QAApB,EAA8BC,KAA9B,CAAlB;AAAwD,MAAA,IAAI,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADe,GAYb,IAZJ;AAaD,GAdD;;AAgBA,SAAOE,QAAQ,CAACJ,UAAD,EAAaC,QAAb,CAAf;AACD,CA7BD;;AA8BA,eAAeN,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { DefaultEditor } from \"react-simple-wysiwyg\";\r\n\r\nconst Edit = props => {\r\n  const [editingThis, setEditingThis] = React.useState(false);\r\n  let showEditor = editingThis ? true : false;\r\n\r\n  let oldValue = props.oldValue;\r\n\r\n  const [value, setValue] = React.useState(oldValue);\r\n  /*\r\n\r\n    NOTE: text is the value and key. Therfore not posibble to update state directly\r\n\r\n    */\r\n  const showThis = (showEditor, oldValue) => {\r\n    return showEditor ? (\r\n      <div>\r\n        <DefaultEditor\r\n          value={value}\r\n          onChange={e => {\r\n            setValue(e.target.value);\r\n          }}\r\n        />\r\n        <a onClick={() => props.changeHandler(oldValue, value)} href=\"#\">\r\n          Save\r\n        </a>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  return showThis(showEditor, oldValue);\r\n};\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}