{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\E217794\\\\Documents\\\\Prosjekter\\\\todouseSelector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\E217794\\\\Documents\\\\Prosjekter\\\\todouseSelector\\\\src\\\\components\\\\DisplayToDos.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 50px;\\n  background-color: #ffe7d9;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { SingleTodo } from \"./SingleTodo\";\nconst Error = styled.div(_templateObject());\n\nconst DisplayToDos = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.error);\n  const savedValues = useSelector(state => state.savedValues);\n\n  const remove = val => dispatch({\n    type: \"REMOVE\",\n    value: val\n  });\n\n  const Update = (changedFrom, changedTo) => dispatch({\n    type: \"EDIT\",\n    value: changedTo,\n    changedFrom: changedFrom\n  });\n\n  const showTodo = savedValues ? savedValues.map(x => {\n    const key = Math.random();\n    return React.createElement(SingleTodo, {\n      remove: remove,\n      key: key,\n      x: x,\n      changeHandler: Update,\n      oldValue: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }) : null;\n  const showError = error !== \"\" ? React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, error) : null;\n  return React.createElement(React.Fragment, null, showError, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, showTodo));\n};\n\nexport default DisplayToDos;","map":{"version":3,"sources":["C:/Users/E217794/Documents/Prosjekter/todouseSelector/src/components/DisplayToDos.js"],"names":["React","useSelector","useDispatch","styled","SingleTodo","Error","div","DisplayToDos","dispatch","error","state","savedValues","remove","val","type","value","Update","changedFrom","changedTo","showTodo","map","x","key","Math","random","showError"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,GAAV,mBAAX;;AAKA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,WAAW,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA/B;;AACA,QAAMC,MAAM,GAAGC,GAAG,IAAIL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAEF;AAAzB,GAAD,CAA9B;;AAEA,QAAMG,MAAM,GAAG,CAACC,WAAD,EAAcC,SAAd,KACbV,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAEG,SAAvB;AAAkCD,IAAAA,WAAW,EAAEA;AAA/C,GAAD,CADV;;AAGA,QAAME,QAAQ,GAAGR,WAAW,GACxBA,WAAW,CAACS,GAAZ,CAAgBC,CAAC,IAAI;AACnB,UAAMC,GAAG,GAAGC,IAAI,CAACC,MAAL,EAAZ;AAEA,WACE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAEZ,MADV;AAEE,MAAA,GAAG,EAAEU,GAFP;AAGE,MAAA,CAAC,EAAED,CAHL;AAIE,MAAA,aAAa,EAAEL,MAJjB;AAKE,MAAA,QAAQ,EAAEK,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAZD,CADwB,GAcxB,IAdJ;AAgBA,QAAMI,SAAS,GAAGhB,KAAK,KAAK,EAAV,GAAe,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CAAf,GAAwC,IAA1D;AAEA,SACE,0CACGgB,SADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMN,QAAN,CAFF,CADF;AAMD,CAjCD;;AAmCA,eAAeZ,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { SingleTodo } from \"./SingleTodo\";\r\n\r\nconst Error = styled.div`\r\n  padding: 50px;\r\n  background-color: #ffe7d9;\r\n`;\r\n\r\nconst DisplayToDos = () => {\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(state => state.error);\r\n  const savedValues = useSelector(state => state.savedValues);\r\n  const remove = val => dispatch({ type: \"REMOVE\", value: val });\r\n\r\n  const Update = (changedFrom, changedTo) =>\r\n    dispatch({ type: \"EDIT\", value: changedTo, changedFrom: changedFrom });\r\n\r\n  const showTodo = savedValues\r\n    ? savedValues.map(x => {\r\n        const key = Math.random();\r\n\r\n        return (\r\n          <SingleTodo\r\n            remove={remove}\r\n            key={key}\r\n            x={x}\r\n            changeHandler={Update}\r\n            oldValue={x}\r\n          />\r\n        );\r\n      })\r\n    : null;\r\n\r\n  const showError = error !== \"\" ? <Error>{error}</Error> : null;\r\n\r\n  return (\r\n    <>\r\n      {showError}\r\n      <div>{showTodo}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayToDos;\r\n"]},"metadata":{},"sourceType":"module"}