{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { withEditorContext } from '../Editor';\nexport var BtnStyles = createDropdown('Styles', [['Normal', 'formatBlock', 'DIV'], ['𝗛𝗲𝗮𝗱𝗲𝗿 𝟭', 'formatBlock', 'H1'], ['Header 2', 'formatBlock', 'H2'], ['𝙲𝚘𝚍𝚎', 'formatBlock', 'PRE']]);\n\nfunction createDropdown(title, items) {\n  DropdownFactory.displayName = title;\n  return withEditorContext(DropdownFactory);\n\n  function DropdownFactory(props) {\n    var selection = props.selection,\n        ddProps = tslib_1.__rest(props, [\"selection\"]);\n\n    return React.createElement(Dropdown, tslib_1.__assign({}, ddProps, {\n      onChange: onChange,\n      title: title,\n      items: items\n    }));\n\n    function onChange(e) {\n      var selected = parseInt(e.target.value, 10);\n      var _a = items[selected],\n          command = _a[1],\n          commandArgument = _a[2];\n      e.preventDefault();\n      e.target.selectedIndex = 0;\n\n      if (typeof command === 'function') {\n        command(selection);\n      } else {\n        document.execCommand(command, false, commandArgument);\n      }\n    }\n  }\n}\n\nexport function Dropdown(props) {\n  var el = props.el,\n      items = props.items,\n      selected = props.selected,\n      selection = props.selection,\n      styles = props.styles,\n      inputProps = tslib_1.__rest(props, [\"el\", \"items\", \"selected\", \"selection\", \"styles\"]);\n\n  var style = tslib_1.__assign({}, styles.dropdown, props.style);\n\n  return React.createElement(\"select\", tslib_1.__assign({}, inputProps, {\n    value: selected,\n    style: style\n  }), React.createElement(\"option\", {\n    hidden: true\n  }, props.title), items.map(function (item, index) {\n    return React.createElement(\"option\", {\n      key: index,\n      value: index\n    }, item[0]);\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}