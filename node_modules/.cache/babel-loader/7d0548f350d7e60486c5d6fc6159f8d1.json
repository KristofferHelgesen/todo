{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\E217794\\\\Documents\\\\Prosjekter\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initState = {\n  name: \"\",\n  savedValues: []\n};\n\nconst reducer = (state = initState, action) => {\n  const type = action.type;\n  const value = action.value ? action.value : 1;\n\n  switch (type) {\n    case \"ADD\":\n      return _objectSpread({}, state, {\n        counter: state.counter + value\n      });\n\n    case \"SUBTRACT\":\n      return _objectSpread({}, state, {\n        counter: state.counter - value\n      });\n\n    case \"SAVE\":\n      return _objectSpread({}, state, {\n        savedValues: state.savedValues.concat(state.counter)\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/E217794/Documents/Prosjekter/todo/src/store/reducer.js"],"names":["initState","name","savedValues","reducer","state","action","type","value","counter","concat"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,WAAW,EAAE;AAFG,CAAlB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAC7C,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,QAAMC,KAAK,GAAGF,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAtB,GAA8B,CAA5C;;AACA,UAAQD,IAAR;AACE,SAAK,KAAL;AACE,+BACKF,KADL;AAEEI,QAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,GAAgBD;AAF3B;;AAKF,SAAK,UAAL;AACE,+BACKH,KADL;AAEEI,QAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,GAAgBD;AAF3B;;AAKF,SAAK,MAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBO,MAAlB,CAAyBL,KAAK,CAACI,OAA/B;AAFf;AAdJ;;AAoBA,SAAOJ,KAAP;AACD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["const initState = {\r\n  name: \"\",\r\n  savedValues: []\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  const type = action.type;\r\n  const value = action.value ? action.value : 1;\r\n  switch (type) {\r\n    case \"ADD\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter + value\r\n      };\r\n\r\n    case \"SUBTRACT\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter - value\r\n      };\r\n\r\n    case \"SAVE\":\r\n      return {\r\n        ...state,\r\n        savedValues: state.savedValues.concat(state.counter)\r\n      };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}