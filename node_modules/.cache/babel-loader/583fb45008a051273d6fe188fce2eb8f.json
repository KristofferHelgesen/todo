{"ast":null,"code":"export function compare(a, b, keys) {\n  return keys.every(function (key) {\n    return a[key] === b[key];\n  });\n}\nexport function deepMerge(target) {\n  var _a, _b;\n\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (var key in source) {\n      if (!source.hasOwnProperty(key)) {\n        continue;\n      }\n\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, (_a = {}, _a[key] = {}, _a));\n        }\n\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, (_b = {}, _b[key] = source[key], _b));\n      }\n    }\n  }\n\n  return deepMerge.apply(void 0, [target].concat(sources));\n}\nexport function findLastTextNode(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    return node;\n  }\n\n  var children = node.childNodes;\n\n  for (var i = children.length - 1; i >= 0; i--) {\n    var textNode = findLastTextNode(children[i]);\n\n    if (textNode !== null) {\n      return textNode;\n    }\n  }\n\n  return null;\n}\nexport function getSelectedNode() {\n  if (document.selection) {\n    return document.selection.createRange().parentElement();\n  }\n\n  var selection = window.getSelection();\n\n  if (selection.rangeCount > 0) {\n    return selection.getRangeAt(0).startContainer.parentNode;\n  }\n}\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function normalizeHtml(str) {\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ');\n}\nexport function replaceCaret(el) {\n  // Place the caret at the end of the element\n  var target = findLastTextNode(el); // do not move caret if element was not focused\n\n  var isTargetFocused = document.activeElement === el;\n\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    var range = document.createRange();\n    var sel = window.getSelection();\n    range.setStart(target, target.nodeValue.length);\n    range.collapse(true);\n    sel.removeAllRanges();\n    sel.addRange(range);\n\n    if (el instanceof HTMLElement) {\n      el.focus();\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}