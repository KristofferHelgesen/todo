{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\E217794\\\\Documents\\\\Prosjekter\\\\todouseSelector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Cookies from \"universal-cookie\";\nlet cookie = new Cookies();\nconsole.log(cookie);\nconst initState = {\n  todo: \"\",\n  savedValues: [],\n  error: \"\"\n};\n\nif (cookie.get(\"todo\")) {\n  cookie = cookie.get(\"todo\");\n  console.log(\"1\");\n} else {\n  console.log(\"2\");\n  cookie.set(\"todo\", JSON.stringify(initState), {\n    path: \"/\"\n  });\n  cookie = cookie.get(\"todo\");\n}\n\nconsole.log(cookie);\n\nconst reducer = (state = initState, action) => {\n  const type = action.type;\n  const value = action.value;\n\n  switch (type) {\n    case \"ADD\":\n      return _objectSpread({}, state, {\n        todo: value\n      });\n\n    case \"REMOVE\":\n      let array = state.savedValues.filter(x => {\n        return x !== value;\n      });\n      return _objectSpread({}, state, {\n        savedValues: array\n      });\n\n    case \"SAVE\":\n      if (state.todo !== \"\" && !state.savedValues.includes(state.todo)) {\n        return _objectSpread({}, state, {\n          savedValues: state.savedValues.concat(state.todo),\n          error: \"\"\n        });\n      } else {\n        return _objectSpread({}, state, {\n          error: \"You already have a todo named: \" + state.todo\n        });\n      }\n\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/E217794/Documents/Prosjekter/todouseSelector/src/store/reducers/input.js"],"names":["Cookies","cookie","console","log","initState","todo","savedValues","error","get","set","JSON","stringify","path","reducer","state","action","type","value","array","filter","x","includes","concat"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,kBAApB;AAEA,IAAIC,MAAM,GAAG,IAAID,OAAJ,EAAb;AACAE,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAMG,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,WAAW,EAAE,EAFG;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAAlB;;AAMA,IAAIN,MAAM,CAACO,GAAP,CAAW,MAAX,CAAJ,EAAwB;AACtBP,EAAAA,MAAM,GAAGA,MAAM,CAACO,GAAP,CAAW,MAAX,CAAT;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,CAHD,MAGO;AACLD,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAF,EAAAA,MAAM,CAACQ,GAAP,CAAW,MAAX,EAAmBC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAnB,EAA8C;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAA9C;AACAX,EAAAA,MAAM,GAAGA,MAAM,CAACO,GAAP,CAAW,MAAX,CAAT;AACD;;AAEDN,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAMY,OAAO,GAAG,CAACC,KAAK,GAAGV,SAAT,EAAoBW,MAApB,KAA+B;AAC7C,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,QAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;;AAEA,UAAQD,IAAR;AACE,SAAK,KAAL;AACE,+BACKF,KADL;AAEET,QAAAA,IAAI,EAAEY;AAFR;;AAKF,SAAK,QAAL;AACE,UAAIC,KAAK,GAAGJ,KAAK,CAACR,WAAN,CAAkBa,MAAlB,CAAyBC,CAAC,IAAI;AACxC,eAAOA,CAAC,KAAKH,KAAb;AACD,OAFW,CAAZ;AAGA,+BACKH,KADL;AAEER,QAAAA,WAAW,EAAEY;AAFf;;AAKF,SAAK,MAAL;AACE,UAAIJ,KAAK,CAACT,IAAN,KAAe,EAAf,IAAqB,CAACS,KAAK,CAACR,WAAN,CAAkBe,QAAlB,CAA2BP,KAAK,CAACT,IAAjC,CAA1B,EAAkE;AAChE,iCACKS,KADL;AAEER,UAAAA,WAAW,EAAEQ,KAAK,CAACR,WAAN,CAAkBgB,MAAlB,CAAyBR,KAAK,CAACT,IAA/B,CAFf;AAGEE,UAAAA,KAAK,EAAE;AAHT;AAKD,OAND,MAMO;AACL,iCACKO,KADL;AAEEP,UAAAA,KAAK,EAAE,oCAAoCO,KAAK,CAACT;AAFnD;AAID;;AA5BL;;AA+BA,SAAOS,KAAP;AACD,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import Cookies from \"universal-cookie\";\r\n\r\nlet cookie = new Cookies();\r\nconsole.log(cookie);\r\nconst initState = {\r\n  todo: \"\",\r\n  savedValues: [],\r\n  error: \"\"\r\n};\r\n\r\nif (cookie.get(\"todo\")) {\r\n  cookie = cookie.get(\"todo\");\r\n  console.log(\"1\");\r\n} else {\r\n  console.log(\"2\");\r\n  cookie.set(\"todo\", JSON.stringify(initState), { path: \"/\" });\r\n  cookie = cookie.get(\"todo\");\r\n}\r\n\r\nconsole.log(cookie);\r\nconst reducer = (state = initState, action) => {\r\n  const type = action.type;\r\n  const value = action.value;\r\n\r\n  switch (type) {\r\n    case \"ADD\":\r\n      return {\r\n        ...state,\r\n        todo: value\r\n      };\r\n\r\n    case \"REMOVE\":\r\n      let array = state.savedValues.filter(x => {\r\n        return x !== value;\r\n      });\r\n      return {\r\n        ...state,\r\n        savedValues: array\r\n      };\r\n\r\n    case \"SAVE\":\r\n      if (state.todo !== \"\" && !state.savedValues.includes(state.todo)) {\r\n        return {\r\n          ...state,\r\n          savedValues: state.savedValues.concat(state.todo),\r\n          error: \"\"\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          error: \"You already have a todo named: \" + state.todo\r\n        };\r\n      }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}